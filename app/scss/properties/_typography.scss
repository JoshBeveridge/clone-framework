// Clone: Typography Properties

    // Font Family

        // Deprecated Syntax
        [data-c-font="sans"] {
            font-family: $clone-font-sans;
            a, span {
                font-family: $clone-font-sans;
            }
        }
        [data-c-font="serif"] {
            font-family: $clone-font-serif;
            a, span {
                font-family: $clone-font-serif;
            }
        }
        [data-c-font="script"] {
            font-family: $clone-font-script;
            a, span {
                font-family: $clone-font-script;
            }
        }
        [data-c-font="mono"],
        [data-c-font="monospace"] {
            font-family: $clone-font-monospace;
            a, span {
                font-family: $clone-font-monospace;
            }
        }

        // 3.0 Syntax
        @each $mediaKey, $mediaValue in $clone-media-query-map {
            @media #{$mediaValue} {
                @each $fontFamilyKey, $fontFamilyValue in $clone-font-family-map {
                    [data-c-font="#{$mediaKey}(#{$fontFamilyKey})"] {
                        font-family: $fontFamilyValue;
                        a, span {
                            font-family: $fontFamilyValue;
                        }
                    }
                }
            }
        }

    // Font Size

        // Deprecated Syntax
        @each $fontSizeKey, $fontSizeValue in $clone-font-size-map {
            [data-c-font-size="#{$fontSizeKey}"] {
                font-size: $fontSizeValue;
            }
        }

        // 3.0 Syntax
        @each $mediaKey, $mediaValue in $clone-media-query-map {
            @media #{$mediaValue} {
                @each $fontSizeKey, $fontSizeValue in $clone-font-size-map {
                    [data-c-font-size*="#{$mediaKey}(#{$fontSizeKey})"] {
                        font-size: $fontSizeValue;
                    }
                }
            }
        }

    // Font Color

        // Deprecated Syntax
        @each $key, $value in $clone-color-map {
            [data-c-color="#{$key}"],
            [data-c-colour="#{$key}"] {color: $value;}
        };

        // 3.0 Syntax
        @each $mediaKey, $mediaValue in $clone-media-query-map {
            @media #{$mediaValue} {
                @each $colorKey, $colorValue in $clone-color-map {
                    [data-c-color*="#{$mediaKey}(#{$colorKey})"],
                    [data-c-colour*="#{$mediaKey}(#{$colorKey})"] {
                        color: $colorValue;
                    }
                }
            }
        }

    // Font Weight

        // Deprecated Syntax
        @each $key, $value in $clone-weight-map {
            [data-c-font-weight="#{$key}"] {font-weight: $value;}
        };

        // 3.0 Syntax
        @each $mediaKey, $mediaValue in $clone-media-query-map {
            @media #{$mediaValue} {
                @each $weightKey, $weightValue in $clone-weight-map {
                    [data-c-font-weight*="#{$mediaKey}(#{$weightKey})"] {
                        font-weight: $weightValue;
                    }
                }
            }
        }

    // Font Style

        // Deprecated Syntax
        [data-c-font-style="reset"] {
            font-style: normal;
            text-decoration: none currentcolor solid;
        }
        [data-c-font-style="italic"] {
            font-style: italic;
        }
        [data-c-font-style="underline"] {
            text-decoration: underline;
        }

        // 3.0 Syntax
        @each $mediaKey, $mediaValue in $clone-media-query-map {
            @media #{$mediaValue} {
                [data-c-font-style*="#{$mediaKey}(reset)"] {
                    font-style: normal;
                    text-decoration: none currentcolor solid;
                }
                [data-c-font-style*="#{$mediaKey}(italic)"] {
                    font-style: italic;
                }
                [data-c-font-style*="#{$mediaKey}(underline)"] {
                    text-decoration: underline;
                }
            }
        }

    // Hover Color

        // Deprecated Syntax
        @each $key, $value in $clone-color-map {
            [data-c-hover-color="#{$key}"]:hover,
            [data-c-hover-colour="#{$key}"]:hover {color: $value;}
        };
        @each $key, $value in $clone-color-map {
            a[data-c-hover-color="#{$key}"]:hover,
            a[data-c-hover-colour="#{$key}"]:hover {color: $value !important;}
        };

        // 3.0 Syntax
        @each $mediaKey, $mediaValue in $clone-media-query-map {
            @media #{$mediaValue} {
                @each $colorKey, $colorValue in $clone-color-map {
                    [data-c-hover-color*="#{$mediaKey}(#{$colorKey})"]:hover,
                    [data-c-hover-colour*="#{$mediaKey}(#{$colorKey})"]:hover {
                        color: $colorValue;
                    }
                };
                @each $colorKey, $colorValue in $clone-color-map {
                    a[data-c-hover-color*="#{$mediaKey}(#{$colorKey})"]:hover,
                    a[data-c-hover-colour*="#{$mediaKey}(#{$colorKey})"]:hover {
                        color: $colorValue !important;
                    }
                };
            }
        }