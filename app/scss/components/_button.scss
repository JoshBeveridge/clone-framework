// Clone: Button Component
a[data-c-button] {
    display: inline-block;
    max-width: 100%;
    text-decoration: underline;
    vertical-align: middle;
}
[data-c-button]:not([data-c-button="reset"]) {
    cursor: pointer;
    font-family: $clone-font-default;
    font-size: $clone-default-font-size;
    outline: none;
    text-align: center;
    transition: all .2s ease;
    padding: calc(#{$clone-padding} / 2);
    i {
        font-size: inherit;
        line-height: 1;
        margin-top: -.2rem;
        transition: all .2s ease;
        vertical-align: middle;
    }
    img {
        display: inline-block;
        transform: translate(0, .1rem);
        width: 1rem;
    }
    svg {
        display: inline-block;
        transform: translate(0, .1rem);
        width: 1rem;
    }
    span+i,
    span+img,
    span+svg {
        margin-left: .5rem;
    }
    i+span,
    img+span,
    svg+span {
        margin-right: 0;
        margin-left: .5rem;
    }

    // States --------------------------------------------------------------
    @media (hover: hover) {
        &:hover {
            background: rgba($clone-focus-color, .2);
            border-color: $clone-focus-color;
            color: $clone-focus-color;
            transition: all .2s ease;
            i {
                color: $clone-focus-color;
                transition: all .2s ease;
            }
        }
        @each $key, $value in $clone-color-map {
            &[data-c-hover-color="#{$key}"]:hover,
            &[data-c-hover-color="#{$key}"]:hover {
                background: rgba($value, .2) !important;
                border-color: $value !important;
                color: $value !important;
                transition: all .2s ease;
                i {
                    color: $value !important;
                    transition: all .2s ease;
                }
            }
        };
    }
    &:focus {
        box-shadow: -3px -3px 0 $clone-focus-color, 3px -3px 0 $clone-focus-color, 3px 3px 0 $clone-focus-color, -3px 3px 0 $clone-focus-color;
    }
    &:disabled {
        background: lighten($clone-grey, 30%);
        border-color: lighten($clone-grey, 30%);
        color: $clone-grey;
        pointer-events: none;
    }
        
}

// IE 11 Hover Support
&[id*="Trident/7.0"] {
    [data-c-button]:not([data-c-button="reset"]) {
        &:hover {
            background: rgba($clone-focus-color, .2);
            border-color: $clone-focus-color;
            color: $clone-focus-color;
            transition: all .2s ease;
            i {
                color: $clone-focus-color;
                transition: all .2s ease;
            }
        }
        @each $key, $value in $clone-color-map {
            &[data-c-hover-color="#{$key}"]:hover,
            &[data-c-hover-color="#{$key}"]:hover {
                background: rgba($value, .2) !important;
                border-color: $value !important;
                color: $value !important;
                transition: all .2s ease;
                i {
                    color: $value !important;
                    transition: all .2s ease;
                }
            }
        };
    }
}

// Variations 
$clone-button-style-list: ("solid", "outline");
@each $style in $clone-button-style-list {
    @each $key, $value in $clone-color-map {
        @if $style == "solid" {
            [data-c-button="#{$style}(#{$key})"] {
                background: $value;
                border: 1px solid $value;
                color: contrasting-color($value, $clone-white, $clone-black);
                i {
                    color: contrasting-color($value, $clone-white, $clone-black);
                }
                &:visited {
                    color: contrasting-color($value, $clone-white, $clone-black);
                }
            }
        }
        @if $style == "outline" {
            [data-c-button="#{$style}(#{$key})"] {
                background: none;
                border: 1px solid $value;
                color: $value;
                i {
                    color: $value;
                }
            }
        }
    }
};
[data-c-button="reset"] {
    background: none;
    border: none;
    cursor: pointer;
    @media (hover: hover) {
        &:hover {
            color: $clone-focus-color;
            transition: all .2s ease;
            i {
                color: $clone-focus-color;
                transition: all .2s ease;
            }
        }
        @each $key, $value in $clone-color-map {
            &[data-c-hover-color="#{$key}"]:hover,
            &[data-c-hover-color="#{$key}"]:hover {
                color: $value !important;
                transition: all .2s ease;
                i {
                    color: $value !important;
                    transition: all .2s ease;
                }
            }
        };
        &:disabled {
            color: $clone-grey;
            pointer-events: none;
        }
    }
}
