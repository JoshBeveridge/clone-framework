// Clone / Properties / Borders

[data-clone] {

    // Deprecated Syntax
    @each $style in $clone-border-style-list {
        @each $width in $clone-border-width-list {
            @each $key, $value in $clone-color-map {
                [data-c-border*="all(#{$width}, #{$style}, #{$key})"] {
                    border-color: $value;
                    border-style: unquote($style);
                    @if ($width == "thin") {
                        border-width: 1px;
                    }
                    @if ($width == "thick") {
                        border-width: .5rem;
                    }
                }
            };
            @each $key, $value in $clone-color-map {
                [data-c-border*="tb(#{$width}, #{$style}, #{$key})"],
                [data-c-border*="bt(#{$width}, #{$style}, #{$key})"] {
                    border-top-color: $value;
                    border-bottom-color: $value;
                    border-top-style: unquote($style);
                    border-bottom-style: unquote($style);
                    @if ($width == "thin") {
                        border-top-width: 1px;
                        border-bottom-width: 1px;
                    }
                    @if ($width == "thick") {
                        border-top-width: .5rem;
                        border-bottom-width: .5rem;
                    }
                }
            };
            @each $key, $value in $clone-color-map {
                [data-c-border*="rl(#{$width}, #{$style}, #{$key})"],
                [data-c-border*="lr(#{$width}, #{$style}, #{$key})"] {
                    border-right-color: $value;
                    border-left-color: $value;
                    border-right-style: unquote($style);
                    border-left-style: unquote($style);
                    @if ($width == "thin") {
                        border-right-width: 1px;
                        border-left-width: 1px;
                    }
                    @if ($width == "thick") {
                        border-right-width: .5rem;
                        border-left-width: .5rem;
                    }
                }
            };
            @each $key, $value in $clone-color-map {
                [data-c-border*="top(#{$width}, #{$style}, #{$key})"] {
                    border-top-color: $value;
                    border-top-style: unquote($style);
                    @if ($width == "thin") {
                        border-top-width: 1px;
                    }
                    @if ($width == "thick") {
                        border-top-width: .5rem;
                    }
                }
            };
            @each $key, $value in $clone-color-map {
                [data-c-border*="right(#{$width}, #{$style}, #{$key})"] {
                    border-right-color: $value;
                    border-right-style: unquote($style);
                    @if ($width == "thin") {
                        border-right-width: 1px;
                    }
                    @if ($width == "thick") {
                        border-right-width: .5rem;
                    }
                }
            };
            @each $key, $value in $clone-color-map {
                [data-c-border*="bottom(#{$width}, #{$style}, #{$key})"] {
                    border-bottom-color: $value;
                    border-bottom-style: unquote($style);
                    @if ($width == "thin") {
                        border-bottom-width: 1px;
                    }
                    @if ($width == "thick") {
                        border-bottom-width: .5rem;
                    }
                }
            };
            @each $key, $value in $clone-color-map {
                [data-c-border*="left(#{$width}, #{$style}, #{$key})"] {
                    border-left-color: $value;
                    border-left-style: unquote($style);
                    @if ($width == "thin") {
                        border-left-width: 1px;
                    }
                    @if ($width == "thick") {
                        border-left-width: .5rem;
                    }
                }
            };
        };
    };

    // 3.0 Syntax
    @each $mediaKey, $mediaValue in $clone-media-query-map {
        @media #{$mediaValue} {
            @each $sideKey, $sideValue in $clone-side-map {
                @each $width in $clone-border-width-list {
                    @each $style in $clone-border-style-list {
                        @each $colorKey, $colorValue in $clone-color-map {
                            [data-c-border*="#{$mediaKey}(#{$sideKey}, #{$width}, #{$style}, #{$colorKey})"] {
                                @if $sideKey == "all" {
                                    border-color: $colorValue;
                                    border-style: unquote($style);
                                    @if ($width == "thin") {
                                        border-width: $clone-border-thickness-thin;
                                    }
                                    @if ($width == "thick") {
                                        border-width: $clone-border-thickness-thick;
                                    }
                                }
                                @else if $sideKey == "tb" {
                                    border-top-color: $colorValue;
                                    border-top-style: unquote($style);
                                    border-bottom-color: $colorValue;
                                    border-bottom-style: unquote($style);
                                    @if ($width == "thin") {
                                        border-top-width: $clone-border-thickness-thin;
                                        border-bottom-width: $clone-border-thickness-thin;
                                    }
                                    @if ($width == "thick") {
                                        border-top-width: $clone-border-thickness-thick;
                                        border-bottom-width: $clone-border-thickness-thick;
                                    }
                                }
                                @else if $sideKey == "rl" {
                                    border-right-color: $colorValue;
                                    border-right-style: unquote($style);
                                    border-left-color: $colorValue;
                                    border-left-style: unquote($style);
                                    @if ($width == "thin") {
                                        border-right-width: $clone-border-thickness-thin;
                                        border-left-width: $clone-border-thickness-thin;
                                    }
                                    @if ($width == "thick") {
                                        border-right-width: $clone-border-thickness-thick;
                                        border-left-width: $clone-border-thickness-thick;
                                    }
                                }
                                @else {
                                    border#{$sideValue}-color: $colorValue;
                                    border#{$sideValue}-style: unquote($style);
                                    @if ($width == "thin") {
                                        border#{$sideValue}-width: $clone-border-thickness-thin;
                                    }
                                    @if ($width == "thick") {
                                        border#{$sideValue}-width: $clone-border-thickness-thick;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

}